{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "AdminUserName": {
      "type": "string",
      "minLength": 1
    },
    "AdminPassword": {
      "type": "securestring"
    },
    "vnetNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Identifies whether to use new or existing Virtual Network"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "OutSystems_VN",
      "metadata": {
        "description": "Virtual network name"
      }
    },
    "virtualNetworkExistingRGName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If using existing VNet, specifies the resource group for the existing VNet"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/23",
      "metadata": {
        "description": "IP address for the virtual network"
      }
    },
    "FESubnetName": {
      "type": "string",
      "defaultValue": "FEsubnet",
      "metadata": {
        "description": "subnet name for the Front-End"
      }
    },
    "FESubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/27",
      "metadata": {
        "description": "IP address for Front-End subnet"
      }
    },
    "FESubnetStartAddress": {
      "type": "string",
      "defaultValue": "10.0.0.0",
      "metadata": {
        "description": "Start IP address for the VMs in Front-End subnet"
      }
    },
    "BESubnetName": {
      "type": "string",
      "defaultValue": "BEsubnet",
      "metadata": {
        "description": "subnet name for the Back-End"
      }
    },
    "BESubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.32/27",
      "metadata": {
        "description": "IP address for the Back-End subnet"
      }
    },
    "BESubnetStartAddress": {
      "type": "string",
      "defaultValue": "10.0.0.32",
      "metadata": {
        "description": "Start IP address for the VMs in Back-End subnet"
      }
    },

    "StorageNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Identifies whether to use new or existing Virtual Network"
      }
    },
    "StorageACCType": {
      "type": "string",
      "defaultValue": "Standard_LRS"
    },
    "StorageACCName": {
      "type": "string",
      "metadata": {
        "description": "Storage Account Unique name"
      }
    },

    "storageAccountExistingRG": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Front-end storage RG"
      }
    },

    "CreateLBchoosebox": {
      "type": "string",
      "defaultValue": "yLB",
      "allowedValues": [
        "yLB",
        "nLB"
      ],
      "metadata": {
        "description": "Identifies whether to deploy a Load Balancer and AV group"
      }
    },
    "dnsNameforLBIP": {
      "type": "string",
      "defaultValue": "uniquednsnameforlbip",
      "metadata": {
        "description": "Unique DNS name"
      }
    },
    "FEName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "FE",
      "metadata": {
        "description": "Front-End hostname"
      }
    },
    "FEVmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "VM Size Controller"
      }
    },
    "count": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of Front-Ends to deploy"
      }
    },
    "CreateDCSchoosebox": {
      "type": "string",
      "defaultValue": "yDCS",
      "allowedValues": [
        "yDCS",
        "nDCS"
      ],
      "metadata": {
        "description": "Identifies whether to deploy a dedicated DCS server"
      }
    },

    "CONTName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "DC",
      "metadata": {
        "description": "Deployment Controller server hostname"
      }
    },
    "CONTVmSize": {
      "type": "string",
      "defaultValue": "Standard_A2",
      "metadata": {
        "description": "VM Size Controller"
      }
    },
    "CreateSQLchoosebox": {
      "type": "string",
      "defaultValue": "ySQL",
      "allowedValues": [
        "ySQL",
        "nSQL"
      ],
      "metadata": {
        "description": "Identifies whether to deploy a SQL server in the BE"
      }
    },
    "SQLName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "SQL",
      "metadata": {
        "description": "SQL server hostname"
      }
    },

    "SQLStorageACCType": {
      "type": "string",
      "defaultValue": "Standard_LRS"
    },
    "SQLStorageACCName": {
      "type": "string",
      "metadata": {
        "description": "Storage Account Unique name"
      }
    },
    "SQLStorageNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Identifies whether to use new or existing Virtual Network"
      }
    },

    "SQLStorageExistingRG": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Back-end storage RG"
      }
    },

    "SQLVmSize": {
      "type": "string",
      "defaultValue": "Standard_D1_v2",
      "metadata": {
        "description": "VM Size SQL"
      }
    },
    "SQLWindowsOSVersion": {
      "type": "string",
      "defaultValue": "Enterprise"
    },
    "location": {
      "type": "string"
    },
    "baseUrl": {
      "type": "string",
      "metadata": {
        "description": "The base URL for dependent assets",
        "artifactsBaseUrl": ""
      },
      "defaultValue": "https://raw.githubusercontent.com/jrfbal/outsystems/master"
    }
  },
  "variables": {
    "URIbase": "[concat(parameters('baseUrl'),'/')]",
    "StorageURI": "[concat(variables('URIbase'),'outstr', parameters('StorageNewOrExisting'), '.json')]",
    "SQLStorageURI": "[concat(variables('URIbase'),'outstr', parameters('CreateSQLchoosebox'), parameters('SQLStorageNewOrExisting'), '.json')]",
    "DCSURI": "[concat(variables('URIbase'),'out', parameters('CreateDCSchoosebox'), '.json')]",
    "FEURI": "[concat(variables('URIbase'),'outFE', parameters('CreateLBchoosebox'), '.json')]",
    "SQLURI": "[concat(variables('URIbase'),'out', parameters('CreateSQLchoosebox'), '.json')]",
    "FESubnetNameSG": "[concat(parameters('FESubnetName'), 'SG')]",
    "BESubnetNameSG": "[concat(parameters('BESubnetName'), 'SG')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "FESubnet": "[concat(variables('vnetID'),'/subnets/',parameters('FESubnetName'))]",
    "BESubnet": "[concat(variables('vnetID'),'/subnets/',parameters('BESubnetName'))]",
    "FEImagePublisher": "outsystems",
    "FEImageOffer": "outsystems-baseline",
    "SQLImagePublisher": "MicrosoftSQLServer",
    "ImagePublisher": "MicrosoftWindowsServer",
    "FEStorageAccountContainerName": "vhds",
    "templateAPIVersion": "2015-11-01",
    "APIVersion": "2015-06-15",
    "FEWindowsOSVersion": "baseline",
    "SQLImageOffer": "SQL2014-WS2012R2"
  },
  "resources": [
    {
      "apiVersion": "[variables('APIVersion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('FESubnetNameSG')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "[variables('FESubnetNameSG')]"
      },
      "properties": {
        "securityRules": [
          {
            "name": "rdp_rule",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "web_rule",
            "properties": {
              "description": "Allow WEB",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "https_rule",
            "properties": {
              "description": "Allow https",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "[variables('APIVersion')]",
      "name": "[variables('BESubnetNameSG')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "[variables('BESubnetNameSG')]"
      },
      "properties": {
        "securityRules": [
          {
            "name": "Allow_FE",
            "properties": {
              "description": "Allow FE Subnet SQL",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "1433",
              "sourceAddressPrefix": "[parameters('FESubnetAddressPrefix')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow_FE_RDP",
            "properties": {
              "description": "Allow FE Subnet RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "[parameters('FESubnetAddressPrefix')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "rdp_rule",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          },
          {
            "name": "Block_FE",
            "properties": {
              "description": "Block App Subnet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "[parameters('FESubnetAddressPrefix')]",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          },
          {
            "name": "Block_Internet",
            "properties": {
              "description": "Block Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 200,
              "direction": "Outbound"
            }
          }
        ]
      }
    },

    {
      "name": "[parameters('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('location')]",
      "apiVersion": "[variables('APIVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('FESubnetNameSG'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('BESubnetNameSG'))]"
      ],
      "tags": {
        "displayName": "[parameters('virtualNetworkName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('FESubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('FESubnetAddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('FESubnetNameSG'))]"
              }
            }
          },
          {
            "name": "[parameters('BESubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('BESubnetAddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('BESubnetNameSG'))]"
              }
            }
          }

        ]
      }
    },

    {
      "name": "deployStorage",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('templateAPIVersion')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('StorageURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "StorageACCType": {
            "value": "[parameters('StorageACCType')]"
          },
          "StorageACCName": {
            "value": "[parameters('StorageACCName')]"
          },
          "apiver": {
            "value": "[variables('APIVersion')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },

    {
      "name": "createDCS",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('templateAPIVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'deployStorage')]",
        "[variables('vnetID')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('DCSURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "AdminUserName": {
            "value": "[parameters('AdminUserName')]"
          },
          "AdminPassword": {
            "value": "[parameters('AdminPassword')]"
          },
          "CONTName": {
            "value": "[parameters('CONTName')]"
          },
          "CONTVmSize": {
            "value": "[parameters('CONTVmSize')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "StorageACCName": {
            "value": "[parameters('StorageACCName')]"
          },
          "FEImagePublisher": {
            "value": "[variables('FEImagePublisher')]"
          },
          "FEImageOffer": {
            "value": "[variables('FEImageOffer')]"
          },
          "FEWindowsOSVersion": {
            "value": "[variables('FEWindowsOSVersion')]"
          },
          "FEStorageAccountContainerName": {
            "value": "[variables('FEStorageAccountContainerName')]"
          },
          "FESubnetRef": {
            "value": "[concat(resourceId(parameters('virtualNetworkExistingRGName'),concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName')),'/subnets/', parameters('FESubnetName'))]"
          },
          "apiver": {
            "value": "[variables('templateAPIVersion')]"
          },
          "NETapiver": {
            "value": "[variables('APIVersion')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }


        }
      }
    },

    {
      "name": "createFE",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('templateAPIVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'deployStorage')]",
        "[variables('vnetID')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('FEURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "AdminUserName": {
            "value": "[parameters('AdminUserName')]"
          },
          "AdminPassword": {
            "value": "[parameters('AdminPassword')]"
          },
          "FEName": {
            "value": "[parameters('FEName')]"
          },
          "FEVmSize": {
            "value": "[parameters('FEVmSize')]"
          },
          "StorageACCName": {
            "value": "[parameters('StorageACCName')]"
          },
          "FEImagePublisher": {
            "value": "[variables('FEImagePublisher')]"
          },
          "FEImageOffer": {
            "value": "[variables('FEImageOffer')]"
          },
          "FEWindowsOSVersion": {
            "value": "[variables('FEWindowsOSVersion')]"
          },
          "FEStorageAccountContainerName": {
            "value": "[variables('FEStorageAccountContainerName')]"
          },
          "FESubnetRef": {
            "value": "[concat(resourceId(parameters('virtualNetworkExistingRGName'),concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName')),'/subnets/', parameters('FESubnetName'))]"
          },
          "count": {
            "value": "[parameters('count')]"
          },
          "dnsNameforLBIP": {
            "value": "[parameters('dnsNameforLBIP')]"
          },
          "apiver": {
            "value": "[variables('templateAPIVersion')]"
          },
          "NETapiver": {
            "value": "[variables('APIVersion')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }


        }
      }
    },
    {
      "name": "SQLdeployStorage",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('templateAPIVersion')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('SQLStorageURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "StorageACCType": {
            "value": "[parameters('SQLStorageACCType')]"
          },
          "StorageACCName": {
            "value": "[parameters('SQLStorageACCName')]"
          },
          "apiver": {
            "value": "[variables('APIVersion')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },

    {
      "name": "createSQL",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SQLdeployStorage')]",
        "[variables('vnetID')]"
      ],
      "apiVersion": "[variables('templateAPIVersion')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('SQLURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "AdminUserName": {
            "value": "[parameters('AdminUserName')]"
          },
          "AdminPassword": {
            "value": "[parameters('AdminPassword')]"
          },
          "SQLWindowsOSVersion": {
            "value": "[parameters('SQLWindowsOSVersion')]"
          },
          "SQLName": {
            "value": "[parameters('SQLName')]"
          },
          "SQLImageOffer": {
            "value": "[variables('SQLImageOffer')]"
          },
          "SubnetRef": {
            "value": "[concat(resourceId(parameters('virtualNetworkExistingRGName'),concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName')),'/subnets/', parameters('BESubnetName'))]"
          },
          "StorageACCName": {
            "value": "[parameters('SQLStorageACCName')]"
          },
          "SQLVmSize": {
            "value": "[parameters('SQLVmSize')]"
          },
          "StorageAccountContainerName": {
            "value": "[variables('FEStorageAccountContainerName')]"
          },
          "apiver": {
            "value": "[variables('templateAPIVersion')]"
          },
          "NETapiver": {
            "value": "[variables('APIVersion')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    }

  ],
  "outputs": {
  }
}
